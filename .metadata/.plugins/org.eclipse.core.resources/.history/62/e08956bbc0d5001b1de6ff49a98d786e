package com.bms.service;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import static org.mockito.Mockito.when;

import java.util.Optional;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.core.userdetails.UserDetails;

import com.bms.dao.UserDAO;
import com.bms.model.Customer;
import com.bms.model.CustomerData;



@SpringBootTest
 class ServiceTest {

	UserDetails userdetails;
	
	@InjectMocks
	CustomerDetailsService custdetailservice;

	@Mock
	UserDAO userservice;

	@Test
	 void loadUserByUsernameTest() {
		
		Customer user=new Customer();
		user.setUsername("kumarpr");
		user.setPassword("kumar@792");
		Optional<Customer> data =Optional.of(user) ;
		when(userservice.findById("kumarpr")).thenReturn(data);
		UserDetails loadUserByUsername = custdetailservice.loadUserByUsername("kumarpr");
		assertEquals(user.getUsername(),loadUserByUsername.getUsername());
	}
	@Test
	 void loadUserByUsernameFalseTest() {
		
		Customer user=new Customer();
		user.setUsername("kumarpr");
		user.setPassword("kumar@792");
		Optional<Customer> data =Optional.of(user) ;
		when(userservice.findById("kumar")).thenReturn(data);
		UserDetails loadUserByUsername = custdetailservice.loadUserByUsername(user.getUsername()+"false");
		assertNotEquals(user.getUsername(),loadUserByUsername.getUsername());
	}

	
}
